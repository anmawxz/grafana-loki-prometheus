version: "3.8"

services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_PATHS_LOGS=/var/log/grafana
      - GF_PATHS_PLUGINS=/var/lib/grafana/plugins
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana_data:/var/lib/grafana
    user: "1000:1000"
    command:
     - chown -R 472:472 /var/lib/grafana
     - chmod -R 755 /var/lib/grafana
    restart: unless-stopped

  prometheus:
    image: docker.io/prom/prometheus:v3.1.0
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    volumes:
      - ./prometheus_data/config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    restart: unless-stopped


  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.9.0
    container_name: node_exporter
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.51.0
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /run:/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped


  loki:
    container_name: loki
    image: grafana/loki:3.4.2
    command: "-config.file=/etc/loki/config.yaml"
    ports:
      # --> (Optional) Remove when using traefik...
      - "3100:3100"
      # <--
    volumes:
      - ./config/config.yaml:/etc/loki/config.yaml:ro
      - data_loki:/loki:rw
    # --> (Optional) When using traefik...
    # labels:
    #   - traefik.enable=true
    #   # -- Traefik Services
    #   - traefik.http.services.loki.loadbalancer.server.port=3100
    #   # -- Traefik Routers
    #   - traefik.http.routers.loki.entrypoints=websecure
    #   - traefik.http.routers.loki.rule=Host(`loki-fqdn`)
    #   - traefik.http.routers.loki.tls=true
    #   - traefik.http.routers.loki.tls.certresolver=cloudflare
    #   - traefik.http.routers.loki.service=loki
    #   # -- (Optional) Authentication
    #   # - traefik.http.routers.loki.middlewares=authentik-middleware@file
    # networks:
    #   - frontend
    # <--
    restart: unless-stopped


volumes:
  prometheus_data:
    driver: local
  data_loki:
    driver: local

# --> (Optional) When using traefik...
# networks:
#   frontend:
#     external: true
# <--